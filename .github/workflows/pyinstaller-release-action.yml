name: pyinstaller-release-action
run-name: Creates release and binaries

on:
  push:
    tags:
      - 'v*'

permissions:
  contents: write

jobs:
  create_release:
    name: Create Release
    runs-on: ubuntu-latest
    steps:
      - name: Create Release
        id: create_release
        uses: softprops/action-gh-release@v2
        with:
          name: ${{ github.ref_name }}
          draft: false
          prerelease: false
          generate_release_notes: true

  build_release:
    name: Build Release
    needs: create_release
    strategy:
      matrix:
        os: [ubuntu-latest, macos-latest, windows-latest]
        include:
          - os: ubuntu-latest
            release_suffix: ubuntu
          - os: macos-latest
            release_suffix: mac
          - os: windows-latest
            release_suffix: windows
    runs-on: ${{ matrix.os }}
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name : Setup Python
        uses: actions/setup-python@v5
        with:
          python-version: '3.12'

      - name: Install Python requirements
        run: pip install -r requirements.txt pyinstaller

      - name : Generate binary for ${{ matrix.release_suffix }}
        run: pyinstaller AutoSummoner.spec

      - name: Rename Linux Build
        if: matrix.os == 'ubuntu-latest'
        run: mv dist/AutoSummoner dist/AutoSummoner-${{ github.ref_name }}-${{ matrix.release_suffix }}

      - name: Rename Mac Build
        if: matrix.os == 'macos-latest'
        run: mv dist/AutoSummoner dist/AutoSummoner-${{ github.ref_name }}-${{ matrix.release_suffix }}

      - name: Rename Windows Build
        if: matrix.os == 'windows-latest'
        run: mv dist/AutoSummoner.exe dist/AutoSummoner-${{ github.ref_name }}-${{ matrix.release_suffix }}.exe

      - name: Release
        uses: softprops/action-gh-release@v2
        with:
          tag_name: ${{ needs.create_release.outputs.tag-name }}
          files: dist/*